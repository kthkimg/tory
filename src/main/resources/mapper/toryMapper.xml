<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="toryMapper">
    <select id="findAllPost" parameterType="com.example.tory.domain.SearchDto" resultType="com.example.tory.domain.Post">
        SELECT
            post_seq as postSeq
            , title as title
            , author as author
            , content as content
            , is_delete as isDelete
            , is_member as isMember
            , password as password
            , member_seq as memberSeq
            , DATE_FORMAT(createAt, '%m-%d') as createAt
            , DATE_FORMAT(updateAt, '%m-%d') as updateAt
        FROM post
        WHERE is_delete = 'N'
            <include refid="search"/>
        ORDER BY
            post_seq DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>


    <select id="getPostCount" parameterType="com.example.tory.domain.SearchDto" resultType="int">
        SELECT
        COUNT(*)
        FROM post
        WHERE
        is_delete = 'N'
        <include refid="search"/>
    </select>


    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND author LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>
                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND (
                        title LIKE CONCAT('%', #{keyword}, '%')
                        OR content LIKE CONCAT('%', #{keyword}, '%')
                        OR author LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>


    <insert id="addMember" parameterType="com.example.tory.domain.Member">
        INSERT INTO MEMBER (id, password, name, email)
        VALUES (#{id}, #{password}, #{name}, #{email})
    </insert>

    <select id="findById" parameterType="com.example.tory.domain.LoginForm" resultType="com.example.tory.domain.Member">
        select
            member_seq as memberSeq
            , id
            , password
            , name
            , email
        from MEMBER
        where id = #{id} and password = #{password}
    </select>

    <insert id="addPost" parameterType="com.example.tory.domain.Post">
        INSERT INTO post (
            <if test="title != null">title,</if>
            <if test="author != null">author,</if>
            <if test="content != null">content,</if>
            is_delete,
            <if test="isMember != null">is_member,</if>
            password,
            <if test="memberSeq != null">member_seq,</if>
            createAt,
            updateAt
        )
        VALUES (
            <if test="title != null">#{title},</if>
            <if test="author != null">#{author},</if>
            <if test="content != null">#{content},</if>
            'N',
            <if test="isMember != null">#{isMember},</if>
        <choose>
            <when test="password != null">#{password}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="memberSeq != null">#{memberSeq}</when>
            <otherwise>null</otherwise>
        </choose>,
        now(),
        now()
        )
    </insert>

    <select id="getPost" parameterType="int" resultType="com.example.tory.domain.Post">
        SELECT
        post_seq as postSeq
        , title as title
        , author as author
        , content as content
        , is_delete as isDelete
        , is_member as isMember
        , password as password
        , member_seq as memberSeq
        , DATE_FORMAT(createAt, '%m-%d') as createAt
        , DATE_FORMAT(updateAt, '%m-%d') as updateAt
        FROM post
        WHERE post_seq = #{postSeq}
    </select>

    <update id="updatePost" parameterType="com.example.tory.domain.Post">
        UPDATE post
        SET
            <if test="title != null">title = #{title}, </if>
            <if test="author != null">author = #{author}, </if>
            <if test="content != null">content = #{content}, </if>
            <if test="password != null">password = #{password}, </if>
            updateAt = now()
        WHERE
            post_seq = #{postSeq}
    </update>

    <update id="deletePost" parameterType="int">
        UPDATE post
        SET
            is_delete = 'Y'
        WHERE
            post_seq = #{postSeq}
    </update>
</mapper>

























